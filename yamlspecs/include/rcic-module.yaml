## This file defines generic variables for most module files
## generated by gen-definitions.py from yaml description files.
## Any definition can be overwritten in respective yaml file. 
## To use place the following line at the top of the yaml file
## !include rcic-module.yaml
## If multiple yaml files are included this one must be the last
##
## (C) 2018-2019 UC Regents
## Research Cyberinfrastructure Center, UC Irvine
## Author: Nadya Williams
---
no_src_dir: True
envmodule: True
src_tarball: none
category:
pkgname: "{{baserpm}}-module"
shortname: "{{name}}"
build:
  configure: echo
  pkgmake: echo
install:
   makeinstall: echo
   installextra:
requires: "{{module.requires}}"
prereq: "{{module.prereq}}"
provides: "{{module.provides}}"
files:
  -  "{{module.category_path}}"
rpm:
  extras:

mod_defaults: &Module
  category_path: "{{pkg_defaults.RCICmpath}}/{{category}}"
  lib: lib
  loadname: "{{name}}/{{module.name}}"
  logname: "{{name}}/{{version}}"
  logger: exec /bin/logger -p local6.notice - t module-hpc $env(USER) {{mod_defaults.logname}}
  name: "{{version}}"
  flagspath: &Flagspath
    - -d " " CPPFLAGS $env({{shortname}}__CPPFLAGS)
    - -d " " LDFLAGS  $env({{shortname}}__LDFLAGS)
  path: "{{pkg_defaults.RCICmpath}}/{{category}}/{{name}}"
  prepend_path: &Prepend_path
    - PATH {{root}}/bin
    - MANPATH {{root}}/share/man
    - LD_LIBRARY_PATH {{root}}/{{module.lib}}
    - PKG_CONFIG_PATH {{root}}/{{module.lib}}/pkgconfig
  setenv: &Setenv
    - "{{shortname}}__PREFIX {{root}}"
    - "{{shortname}}__CPPFLAGS -I{{root}}/include"
    - "{{shortname}}__LDFLAGS \"-L{{root}}/{{module.lib}} -Wl,-rpath,{{root}}/{{module.lib}}\""
  prereq:
    - "{{build.modules}}"
  base_requires: &Requires
    - rcic-module-support
    - "{{baserpm}}"
  requires:
    - *Requires
    - "{{module.prereq}}"
  provides:
    - "{{module.logname}}"

# basic module
module:
  <<: *Module

# module with compiler specs
moduleCompiler: &ModuleCompiler
  <<: *Module
  logname: "{{name}}/{{version}}/{{compiler}}.{{compiler_version}}"
  name: "{{compiler}}.{{compiler_version}}"
  path: "{{mod_defaults.path}}/{{version}}"
  prepend_path:
    - *Prepend_path
    - *Flagspath
  prereq_c: &ModuleCompiler_prereq
    - "{{compiler}}/{{compiler_version}}"

# module with compiler and interconnect specs
moduleCompilerMpi: &ModuleCompilerMpi
  <<: *Module
  logname: "{{name}}/{{version}}/{{compiler}}.{{compiler_version}}-{{mpi}}.{{mpi_version}}"
  name: "{{compiler}}.{{compiler_version}}-{{mpi}}.{{mpi_version}}"
  path: "{{mod_defaults.path}}/{{version}}"
  prepend_path:
    - *Prepend_path
    - *Flagspath
  prereq_mpi: &ModuleCompilerMpi_prereq
    - "{{mpi}}/{{mpi_version}}/{{compiler}}.{{compiler_version}}"
