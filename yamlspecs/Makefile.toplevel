# Public sources for admixes are currently held in Wasabi hot cloud 
# You can set a different base https locations by setting the SURL Environment
# var
ifndef SURL
SURL= https://s3.us-west-1.wasabisys.com/admix-sources
endif

ROCKSSHARE=/opt/rocks/share/devel
DOWNLOADER=$(ROCKSSHARE)/bin/get_sources.sh
ADMIXNAME = $(shell basename $$(pwd))
LI0 = "     - "
LISTINDENT = $(subst ",,$(LI0))
BUILDREQUIRES = buildrequires
.PHONY: manifest cleansources BootstrapRepo createBootstrapRepo 
.PHONY: install-admix install-admix-exclusive uninstall-admix  uninstall-admix-exclusive



include  $(ROCKSSHARE)/src/roll/etc/Rules-repo-centos.mk
AllRepoLockfile = /var/lock/yaml2rpm.lock

download: sources
	SURL=$(SURL) $(DOWNLOADER)
sources:
	mkdir sources

manifest:
	make -C yamlspecs -s manifest

ansible:
	make -C yamlspecs -s ansible

## Lock critical section that creates localrepo and installs admix
install-admix: 
	flock $(AllRepoLockfile) make install-exclusive YES=$(YES)

install-exclusive:
	make createlocalrepo
	make -e -C yamlspecs -s manifest | xargs $(SUDO) yum $(YES) -c yum.conf install 

## Lock critical section that creates manifest and uninstalls admix.
uninstall-admix:
	flock $(AllRepoLockfile) make uninstall-exclusive YES=$(YES)

uninstall-exclusive:
	make -C yamlspecs -s manifest | xargs $(SUDO) yum $(YES) -c yum.conf erase 


# Adapt definitions from rocks-devel. When bootstrapping and then installing 
# a just-built RPM, just need the latest-built RPM. For large bootstraps (Like R and Perl)
# This is significantly faster over createlocalrepo
# If called with a PACKAGE= limits to just searching for packages with that pattern
# This is invoked in the boostrapping of packages and is a CRITICAL section of code

BootstrapRepo: $(LOCALREPO.REPO)
	[ -d $(LOCALPATH)/$(REPONAME) ] || /bin/mkdir -p $(LOCALPATH)/$(REPONAME)/RPMS
	- /bin/rm $(LOCALPATH)/$(REPONAME)/RPMS/*
	(THERPM=$$(find RPMS -name '$(PACKAGE)*.rpm' -exec ls -tr {} + | tail -1); \
		echo $$THERPM; /bin/cp -p $$THERPM $(LOCALPATH)/$(REPONAME)/RPMS)
	( cd $(LOCALPATH)/$(REPONAME); createrepo .)

createBootstrapRepo: copyconf BootstrapRepo localcache

buildall buildall-parallel:
	make -e download
	make -e -C yamlspecs $@

module-requires-provides:
	(	                                                   \
                [ -f $(BUILDREQUIRES) ] && buildrequires=$$(cat $(BUILDREQUIRES) | grep -v '#' | sed 's/^/$(LISTINDENT)/') ;\
		requires=`make -s -C yamlspecs module-requires 2>/dev/null | sed 's/^/$(LISTINDENT)/' | sort | uniq`; \
		provides=`make -s -C yamlspecs module-provides 2>/dev/null | sed 's/^/$(LISTINDENT)/' | sort | uniq`; \
		requires="$$buildrequires\\n$$requires"; \
		echo "$(ADMIXNAME):";               \
		echo "  requires:";                 \
		echo -e "$$requires";               \
		echo "  provides:";                 \
		echo "$$provides";                  \
	)

module-info:
	(                                                          \
		echo "$(ADMIXNAME):";               \
		make -s -C yamlspecs module-info 2>/dev/null | sed 's/^/  /'; \
	)

cleansources:
	- /bin/rm -rf sources

veryclean: clean cleansources
	make -C yamlspecs veryclean	


